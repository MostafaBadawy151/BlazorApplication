@page "/Employees"
@inject IService<Employee> EmpService
@inject IService<Department> DeptService

<h3>Employees</h3>
@if(EmpList != null)
{
    <div class="table table-striped">
        <table class="table">
            <thead>
                <tr>

                    <th scope="col">Name</th>
                    <th scope="col">Salary</th>
                    <th scope="col">Department</th>
                </tr>

            </thead>
            <tbody>
                @foreach (var emp in EmpList)
                {
                    <tr>
                        <td scope="col">@emp.Name</td>
                        <td scope="col">@emp.Salary</td>
                        @foreach(var item in departments)
                        {
                            @if (emp.DepartmentId == item.Id)
                            {
                                <td scope="col">@item.Name</td>
                            }
                        }
                       
                        <td >
                            <button @onclick="() => NavigateToEmployeeDetails(emp.Id)" class="btn  btn-primary">Details</button>
                        </td>
                        <td >
                            <button @onclick="() => NavigateToEmployeeEdit(emp.Id)" class="btn btn-warning">Edit</button>
                        </td>
                        <td >
                            <button @onclick="() => DeleteEmployee(emp.Id)" class="btn btn-danger">Delete</button>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>


}
<button @onclick="() => NavigateToEmployeeAdd()" class="btn btn-success mt-4">Add New Employee</button>


@code {
    @inject NavigationManager NavigationManager

	public List<Employee> EmpList { get; set; }
    public List<Department> departments { get; set; }


	protected override async Task OnInitializedAsync()
	{
		EmpList = await EmpService.GetAll();
        departments = await DeptService.GetAll();

		await  base.OnInitializedAsync();
	}
    private void NavigateToEmployeeDetails(int employeeId)
    {
        NavigationManager.NavigateTo($"/employee/details/{employeeId}");
    }
    private void NavigateToEmployeeEdit(int employeeId)
    {
        NavigationManager.NavigateTo($"/employee/Edit/{employeeId}");
    }
    private void NavigateToEmployeeAdd()
    {
        NavigationManager.NavigateTo($"/NewEmployee");
    }
    public void  DeleteEmployee(int employeeId)
    {
        NavigationManager.NavigateTo($"/ConfirmDelete/{employeeId}");

    }
}
